{"version":3,"sources":["images/hp-background.jpg","images/green-background.jpg","images/wood-background.jpeg","images/picnic-background.jpg","components/Homepage.js","components/Cards.js","components/Game.js","components/End.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Homepage","props","setName","e","setState","name","target","value","setBackground","backgrounud","state","id","onChange","this","placeholder","disable","selected","to","onClick","setPlayer","Component","Cards","cardColor","player","type","className","num","style","color","comp","Game","splitDeck","x","Math","floor","random","counter","compCard","compCards","playerCard","playerCards","temp","splice","temp2","opacity","pointerEvents","flag","deal","preventDefault","result","win","lose","show","End","wins","loses","createDeck","App","background","pokerTable","woodenTable","picnicTable","suites","y","push","deck","homeImage","backgroundImage","exact","path","component","s","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.833cedc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hp-background.1d7d81d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/green-background.ee6c2c75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wood-background.ea44f6c3.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/picnic-background.f226fd9c.jpg\";","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\n\n\nexport default class Homepage extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            name:\"\",\n            backgrounud:\"\"\n             \n        }\n    }\n    setName=(e)=>[\n        this.setState({name:e.target.value})\n    ]\n    setBackground=(e)=>{\n        this.setState({backgrounud:e.target.value})\n    }\n    \n    render() {\n        return (\n            <div>\n                <h1 id=\"hp-title\">Ready for WAR</h1>\n                <div id=\"hp-input-div\">\n                    <input onChange={this.setName} placeholder=\"Enter your name\" id=\"hp-input\"/>\n                    <select onChange={this.setBackground} id=\"backgroundSelect\">\n                        <option disable selected>Select background</option>\n                        <option value=\"poker\">Poker table</option>\n                        <option value=\"wood\">Wooden table</option>\n                        <option value=\"picnic\">Picnic table</option>\n                        \n                    </select>\n                    <Link to=\"/game\"><button id=\"hp-btn\" onClick={()=>{this.props.setPlayer(this.state.name, this.state.backgrounud)}}>Start</button></Link>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Cards extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             \n        }\n    }\n    cardColor=()=>{\n        if(this.props.player.type == '♠︎' || this.props.player.type == '♣︎'){\n            return \"black\";\n        }\n        else if(this.props.player.type == '♥︎' || this.props.player.type == '♦︎'){\n            return \"red\";\n        }\n    }\n    render() {\n        return (\n            <div id=\"cards-div\">\n        <div className='card comp-card' >\n            <div className=\"card-top\">\n                <h4>{this.props.player.num}</h4>\n                <h6 style={{color:this.cardColor}}>{this.props.player.type}</h6>\n            </div>\n            <div className=\"card-mid\">\n                <h1>{this.props.player.type}</h1>\n            </div>\n            <div className=\"card-btm\">\n                <h4>{this.props.player.num}</h4>\n                <h6>{this.props.player.type}</h6>\n            </div>\n        </div>\n        <div className='card player-card'>\n            <div className=\"card-top\">\n                <h4>{this.props.comp.num}</h4>\n                <h6>{this.props.comp.type}</h6>\n            </div>\n            <div className=\"card-mid\">\n                <h1>{this.props.comp.type}</h1>\n            </div>\n            <div className=\"card-btm\">\n                <h4>{this.props.comp.num}</h4>\n                <h6>{this.props.comp.type}</h6>\n            </div>\n        </div>\n    </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport Cards from './Cards.js';\n\n\nexport default class Game extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            style:{opacity:0, pointerEvents:\"none\"},\n            compCards:this.props.compCards,\n            playerCards:this.props.playerCards,\n            playerCard:'',\n            compCard:'',\n            counter:26,\n            flag:false,\n            win:0,\n            lose:0\n        }\n    }\n   \n\n    splitDeck=()=>{\n        let x= Math.floor(Math.random()*this.state.counter);\n        this.setState({compCard:this.state.compCards[x]})\n        this.setState({playerCard:this.state.playerCards[this.state.counter-1]})\n\n        // errasing chosen cards from deck so they wont be  re-used\n        let temp=this.state.playerCards;\n        temp.splice(this.state.counter, 1)\n        this.setState({playerCards:temp})\n\n        let temp2=this.state.compCards;\n        temp2.splice(x,1);\n        this.setState({compCards:temp2})\n\n\n        this.setState({counter:this.state.counter-1})\n\n        // switching b/w Deal-btn and <cards> + showing the \"Next\" button\n        this.setState({style:{opacity:1, pointerEvents:\"all\"}})\n        this.setState({flag:true})\n    }\n\n    deal=(e)=>{\n        if(this.state.counter!==0){\n            e.preventDefault()\n        }\n        else{\n            this.props.result(this.state.win, this.state.lose)\n        }\n        if(this.state.compCard.num>this.state.playerCard.num){\n            this.setState({win:this.state.win+1})\n        }\n        else{\n            this.setState({lose:this.state.lose+1})\n        }\n        let x= Math.floor(Math.random()*this.state.counter);\n        this.setState({compCard:this.state.compCards[x]})\n        this.setState({playerCard:this.state.playerCards[this.state.counter-1]})\n\n        // errasing chosen cards from deck so they wont be  re-used\n        let temp=this.state.playerCards;\n        temp.splice(this.state.counter, 1)\n        this.setState({playerCards:temp})\n\n        let temp2=this.state.compCards;\n        temp2.splice(x,1);\n        this.setState({compCards:temp2})\n\n\n        this.setState({counter:this.state.counter-1})\n    }\n\n\n\n\n    show=()=>{\n        if(this.state.flag==false){\n            return  <button id=\"dealBtn\" onClick={this.splitDeck}>Deal</button>\n        }\n        else if(this.state.flag==true){\n            return <div><Cards player={this.state.playerCard} comp={this.state.compCard}/></div>\n        }\n    }\n\n    \n    render() {\n        return (\n            <div>\n                <h1 id=\"compName\">Computer</h1>\n                {this.show()}\n                <Link to='/end' onClick={(e)=>{this.deal(e)}}><button style={this.state.style} id=\"nextBtn\" >Next</button></Link>\n                <h1 id=\"playerName\">{this.props.name}</h1>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\n\nexport default class End extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             \n        }\n    }\n\n    \n    render() {\n        return (\n            <div>\n                <div className=\"result-div\">\n                    <h1 className=\"result-title\">{this.props.result}</h1>\n                    <h3 className=\"total-results\">{this.props.wins}-{this.props.loses}</h3>\n                    <Link to='/game'><button onClick={()=>{this.props.createDeck()}} className=\"result-btn\">Again</button></Link>\n                    <Link to='/'><button className=\"result-btn\">Sign out</button></Link>\n                </div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './App.css';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport Homepage from './components/Homepage.js';\nimport Game from './components/Game.js';\nimport End from './components/End.js';\nimport homeImage from './images/hp-background.jpg';\nimport pokerTable from './images/green-background.jpg';\nimport woodenTable from './images/wood-background.jpeg';\nimport picnicTable from './images/picnic-background.jpg';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      player:'',\n      background:`url(${homeImage})`,\n      deck:[],\n      playerCards:'',\n      compCards:'',\n      result:''\n    }\n  }\n \n\n\n  setPlayer=(name, background)=>{\n    // setting player's name and chosen background\n    this.setState({player:{name:name, wins:0, loses:0}})\n    if(background===\"poker\"){\n      this.setState({background:`url(${pokerTable})`})\n    }\n    else if(background===\"wood\"){\n      this.setState({background:`url(${woodenTable})`})\n    }\n    else if(background===\"picnic\"){\n      this.setState({background:`url(${picnicTable})`})\n    }\n    this.createDeck()\n  }\n\n  createDeck=()=>{\n    // creating a deck\n    const temp=[]\n    let suites=['♠︎','♣︎','♥︎','♦︎']\n    for(let x=1; x<14; x++){\n      for(let y=0; y<4; y++){\n        temp.push({num:x, type:suites[y]})\n      }\n    }\n    this.setState({deck:temp})\n\n    // Spliting the deck in 2\n    let playerCards=[]\n    for(let x=1 ; x<=26 ; x++){\n      let y=Math.floor(Math.random()*27);\n      playerCards.push(temp[y]);\n      temp.splice(y,1);\n    }\n    this.setState({playerCards:playerCards})\n    this.setState({compCards:temp})\n  }\n\n  result=(win, lose)=>{\n    if(win>lose){\n      this.setState({result:\"Win\"})\n      let temp=this.state.player\n      temp.wins++\n      this.setState({player:temp})\n    }\n    else{\n      this.setState({result:\"Lose\"})\n      let temp=this.state.player\n      temp.loses++\n      this.setState({player:temp})\n    }\n  }\n\n\n  \n  \n  \n  render() {\n    return (\n      <div id =\"body\" style={{backgroundImage:this.state.background}}>\n        <Router>\n          <Switch>\n            <Route exact path='/' component={()=>{return <Homepage setPlayer={this.setPlayer}/>}}/>\n            <Route exact path='/game' component={()=>{return <Game deck={this.state.deck} name={this.state.player.name} playerCards={this.state.playerCards}s compCards={this.state.compCards} result={this.result}/>}}/>\n            <Route exact path='/end' component={()=>{return <End wins={this.state.player.wins} loses={this.state.player.loses} result={this.state.result} createDeck={this.createDeck}/>}}/>\n          </Switch>\n        </Router>\n        \n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}